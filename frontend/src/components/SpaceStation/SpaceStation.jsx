/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 space_station.gltf 
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations, useCursor } from '@react-three/drei'
import { useNavigate } from 'react-router-dom';

export default function SpaceStation(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/space_station/space_station.gltf');
  const { actions } = useAnimations(animations, group);

  const navigate = useNavigate();
  const [hovered, setHovered] = useState(false);
  useCursor(hovered && props.clickable);

  const handleClick = () => {
    if (props.clickable && props.to) {
      navigate(props.to);
    }
  };

  useEffect(() => {
    if (materials.spacestation_main) {
      materials.spacestation_main.color.multiplyScalar(3);
      materials.spacestation_main.emissiveIntensity = 0.3;
    }
    if (materials.spacestation_main2) {
      materials.spacestation_main2.color.multiplyScalar(3);
      materials.spacestation_main2.emissiveIntensity = 0.3;
    }
    if (materials.spacestation_smalllights) {
      materials.spacestation_smalllights.color.multiplyScalar(3);
      materials.spacestation_smalllights.emissiveIntensity = 1;
    }
  }, [materials])

  return (
    <group
      ref={group}
      position={props.position}
      scale={props.scale}
      {...props}
      dispose={null}
      onClick={() => handleClick()}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
    >
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="SpaceStation_low_0">
                <mesh name="Object_4" geometry={nodes.Object_4.geometry} material={materials.spacestation_main2} />
              </group>
              <group name="SpaceStation001_low_1">
                <mesh name="Object_6" geometry={nodes.Object_6.geometry} material={materials.spacestation_smalllights} />
              </group>
              <group name="SpaceStation002_low_2">
                <mesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.spacestation_main2} />
              </group>
              <group name="SpaceStation003_low_3">
                <mesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials.spacestation_main2} />
              </group>
              <group name="SpaceStation004_low_4">
                <mesh name="Object_12" geometry={nodes.Object_12.geometry} material={materials.spacestation_main} />
              </group>
              <group name="SpaceStation005_low_5">
                <mesh name="Object_14" geometry={nodes.Object_14.geometry} material={materials.spacestation_main} />
              </group>
              <group name="SpaceStation006_low_6" rotation={[Math.PI, -0.545, Math.PI]}>
                <mesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials.spacestation_main} />
              </group>
              <group name="SpaceStation007_low_7">
                <mesh name="Object_18" geometry={nodes.Object_18.geometry} material={materials.spacestation_main} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./public/space_station/space_station.gltf')
